schema: "1"
id: spinnakerDeployPrestaging
variables:
# application is magic var.
- name: regionCapacity
  description: A map of AWS regions to deploy into and the number of instances to launch for that region
  type: object
configuration:
  triggers:
  - type: pipeline
    application: "{{ application }}"
    pipeline: Deploy to Test
    pipelineStatus:
    - successful
    enabled: true
stages:
- id: findImage
  type: findImageFromTags
  config:
    package: "{{ application }}"
    regions: "{{ keys regionCapacity }}"
    tags:
      stack: test
- id: manualJudgement
  type: manualJudgement
  dependsOn: findImage
  config:
    propagateAuthentication: true
    notifications:
    - type: slack
      channel: "#det"
      when:
      - awaiting 
- id: deploy
  type: deploy
  dependsOn: manualJudgement
  config:
    # here's an example of looping. You'll notice that all templating must
    # occur within the strings: These must remain valid JSON / YAML before
    # any processing occurs. JSON ingested, then rendered.
    clusters: |
      {{#each regionCapacity}}
      - {{module deployCluster region=name capacity=value}}
      {{/regionCapacity}}

---
id: deployCluster
usage: |
  Defines a single cluster template during the deploy stage.
variables:
- name: region
  description: The AWS region to deploy into
- name: capacity
  description: The number of instances to deploy into this region
  type: int
definition:
  provider: aws
  account: mgmt
  region: "{{ region }}"
  vpcSubnet: internal
  stack: prestaging
  strategy: 
    name: redblack
    scaleDownReplacedServerGroups: true
    maxServerGroupsToLeave: 2
  loadBalancers:
  - "{{ application }}-prestaging-vpc0"
  securityGroups:
  - nf-datacenter
  - nf-infrastructure
  - "{{ application }}"
  - spinnaker-internal-service
  instanceType: m3.large
  capacity:
    type: simple
    numberOfInstances: {{ capacity }}
  availabilityZones:
    automatic: true
    azRebalance: true
  advanced:
    cooldown: 300
    healthCheckType: EC2
    healthCheckGracePeriod: 0
    # terminationPolicies:
    # - default
    keyName: nf-keypair-567395257996-{{ region }}
    iamInstanceProfile: "{{ application }}InstanceProfile"
    instanceMonitoring: true
    # scalingPolicies: []
    disabledScalingPolicies: []
